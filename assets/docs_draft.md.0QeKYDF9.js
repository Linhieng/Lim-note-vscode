import{_ as s,c as i,o as a,a2 as e}from"./chunks/framework.rQ2N3pzP.js";const E=JSON.parse('{"title":"草稿","description":"","frontmatter":{},"headers":[],"relativePath":"docs/draft.md","filePath":"docs/draft.md"}'),t={name:"docs/draft.md"},n=e(`<h1 id="草稿" tabindex="-1">草稿 <a class="header-anchor" href="#草稿" aria-label="Permalink to &quot;草稿&quot;">​</a></h1><h2 id="零碎" tabindex="-1">零碎 <a class="header-anchor" href="#零碎" aria-label="Permalink to &quot;零碎&quot;">​</a></h2><p>多文件 workspace + profile 自定义 setting 时，会出现以下 settings json 文件：</p><ul><li>User: 属于当前 profile 的配置。通过界面操作时，vscode 会更新这里面的配置</li><li>Folder: workspace 中每个文件夹所属</li><li>Application: the default profile settings json. 只有一部分配置能生效，如 <code>http.proxy</code>,</li><li>Workspace: 这就是是我想要，自己编辑的 setting 不会被 vscode 自动修改。</li><li>Default: omit.</li></ul><h2 id="案例解决方案" tabindex="-1">案例解决方案 <a class="header-anchor" href="#案例解决方案" aria-label="Permalink to &quot;案例解决方案&quot;">​</a></h2><h3 id="有关-markdown-智能粘贴的那些事" tabindex="-1">有关 markdown 智能粘贴的那些事 <a class="header-anchor" href="#有关-markdown-智能粘贴的那些事" aria-label="Permalink to &quot;有关 markdown 智能粘贴的那些事&quot;">​</a></h3><p>更多信息请查看 <a href="https://github.com/microsoft/vscode/issues/188736" target="_blank" rel="noreferrer">vscode#188736</a>。这里就直接说我对智能粘贴的处理方案：</p><p>首先，配置 <code>settings.json</code> 文件：</p><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;markdown.editor.pasteUrlAsFormattedLink.enabled&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;always&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 无论何时，当在 markdown 文档中粘贴一个链接时，都会将其处理为链接格式 —— [text](https://github.com/microsoft/vscode/issues/188736)</span></span></code></pre></div><p>但有时候我们只想粘贴为纯文本格式，故我们可以为纯文本粘贴提供一个新的快捷键：编辑 <code>keybindings.json</code> 文件</p><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        &quot;key&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;ctrl+l ctrl+v&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        &quot;command&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;editor.action.pasteAs&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        &quot;when&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;editorLangId == &#39;markdown&#39;&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        &quot;args&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">            // 粘贴为纯文本</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">            &quot;id&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;text&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    },</span></span></code></pre></div><p>现在，当键入 <code>ctrl+v</code> 时始终粘贴为链接格式，需要粘贴为纯文本格式时，只需键入 <code>ctrl+l ctrl+v</code>。</p><h3 id="配置-c-语言运行环境" tabindex="-1">配置 C 语言运行环境 <a class="header-anchor" href="#配置-c-语言运行环境" aria-label="Permalink to &quot;配置 C 语言运行环境&quot;">​</a></h3><p>跟着 <a href="https://code.visualstudio.com/docs/cpp/config-mingw" target="_blank" rel="noreferrer">官网教程</a> 走就行。</p><ol><li>安装 vscode, C/C++ 扩展工具</li><li>安装 <a href="https://www.msys2.org/" target="_blank" rel="noreferrer">MSYS2</a>, 直接默认下一步。</li><li>在 MSYS2 搭建的终端窗口中运行 <code>pacman -S --needed base-devel mingw-w64-x86_64-toolchain</code> 命令，该命令将安装我们所需要的所有工具链。安装途中会两次停顿，直接按下会车键即可。</li><li>将 <code>C:\\msys64\\mingw64\\bin</code> 添加到系统环境变量中</li><li>打开 Window 终端，运行 <code>gcc --version</code>, <code>g++ --version</code>, <code>gdb --version</code> 命令确保成功。</li><li>在 vscode 中编写 C/C++ 代码运行看看是否成功。</li></ol>`,15),l=[n];function o(h,p,r,d,c,k){return a(),i("div",null,l)}const u=s(t,[["render",o]]);export{E as __pageData,u as default};
