import{_ as s,c as i,o as t,a2 as e}from"./chunks/framework.rQ2N3pzP.js";const u=JSON.parse('{"title":"代码片段","description":"","frontmatter":{},"headers":[],"relativePath":"docs/Snippets/README.md","filePath":"docs/Snippets/README.md"}'),a={name:"docs/Snippets/README.md"},d=e(`<h1 id="代码片段" tabindex="-1"><a href="https://code.visualstudio.com/docs/editor/userdefinedsnippets" target="_blank" rel="noreferrer">代码片段</a> <a class="header-anchor" href="#代码片段" aria-label="Permalink to &quot;[代码片段](https://code.visualstudio.com/docs/editor/userdefinedsnippets)&quot;">​</a></h1><p>全局代码片段支持以下参数：</p><ul><li><p><code>scope</code>：指定作用范围，不能乱写。并且区分大小写。使用逗号分割多个值。具体有哪些可用值，可通过 <code>ctrl+k m</code> 快捷键查看，注意是括号内的值。比如是 <code>html</code> 而不是 <code>HTML</code>，是 <code>markdown</code> 而不是 <code>Markdown</code>。</p></li><li><p><code>prefix</code>：触发代码片段的前缀，通过字符串数组可以设置多个触发前缀。</p></li><li><p><code>body</code>：具体的代码片段。可以是字符串，也可以是字符串数组。其中有一些特殊变量值，比如 <code>$1</code>, <code>$2</code>, ... 可指定 tab 跳转位置。<code>$0</code> 是最终光标的停留位置。<code>\${1:default_name}</code>, <code>{2:default_name}</code>, ... 在 <code>$1</code>, <code>$2</code> 的基础上支持默认值（占位字符串）</p></li><li><p><code>description</code>：描述信息</p></li></ul><h2 id="vscode-代码片段中提供的变量" tabindex="-1"><a href="https://code.visualstudio.com/docs/editor/userdefinedsnippets#_variables" target="_blank" rel="noreferrer">vscode 代码片段中提供的变量</a> <a class="header-anchor" href="#vscode-代码片段中提供的变量" aria-label="Permalink to &quot;[vscode 代码片段中提供的变量](https://code.visualstudio.com/docs/editor/userdefinedsnippets#_variables)&quot;">​</a></h2><p>使用方法：<code>$name</code> 或者 <code>\${name:default_value}</code>。</p><table><thead><tr><th>example</th><th>说明</th></tr></thead><tbody><tr><td><code>$TM_FILENAME</code></td><td>当前文件名</td></tr><tr><td><code>$TM_FILENAME_BASE</code></td><td>当前文件名，不含后缀</td></tr><tr><td><code>$TM_FILEPATH</code></td><td>当前文件的完整路径</td></tr><tr><td><code>$RELATIVE_FILEPATH</code></td><td>当前文件相对工作区的路径</td></tr><tr><td><code>$CURRENT_YEAR</code></td><td>年，比如 2023</td></tr><tr><td><code>$CURRENT_MONTH</code></td><td>月，比如 09</td></tr><tr><td><code>$CURRENT_DATE</code></td><td>日，比如 16</td></tr><tr><td><code>$CURRENT_HOUR</code></td><td>点，比如 10</td></tr><tr><td><code>$CURRENT_MINUTE</code></td><td>分，比如 27</td></tr><tr><td><code>$CURRENT_SECOND</code></td><td>秒，比如 14</td></tr></tbody></table><h2 id="旧笔记搬运" tabindex="-1">旧笔记搬运 <a class="header-anchor" href="#旧笔记搬运" aria-label="Permalink to &quot;旧笔记搬运&quot;">​</a></h2><p>可以在项目中创建 <code>.vscode/.code-snippets</code> 文件，作为该目录中的特定代码片段。 或者运行 snippet configure user snippets 创建全局、指定语言的代码片段。</p><p>可以在 <code>%vscode安装目录%\\Microsoft VS Code\\resources\\app\\extensions\\javascript\\snippets</code> 中修改 js 文件的默认代码片段，其他语言同理。在这里面可以很方便的学习代码片段的编写以及使用方式，同时还可以找到一些不知道的代码片段，比如 <code>Region</code> 强制折叠。</p><p>案例：</p><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;获取当前时间&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        &quot;prefix&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [ </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;get-time&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ],</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        &quot;body&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">            &quot;$CURRENT_YEAR-$CURRENT_MONTH-$CURRENT_DATE $CURRENT_HOUR:$CURRENT_MINUTE&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        ],</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        &quot;description&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;获取当前时间&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    },</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;初始化 “长期更新的文件” 模板&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        &quot;prefix&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [ </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;!&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;！&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ],</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        &quot;body&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">            &quot;/**&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">            &quot; * @author:  Linhieng&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">            &quot; * @data:    $CURRENT_YEAR-$CURRENT_MONTH-$CURRENT_DATE $CURRENT_HOUR:$CURRENT_MINUTE&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">            &quot; * @文件说明: $1 &quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">            &quot; */&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        ],</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        &quot;description&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;基本代码模板&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>代码片段属于 suggest。通过快捷键 ctrl+i 可触发 suggest。suggest 有很多类型，代码片段（snippets）只是其中的一类。通过 <code>editor.snippetSuggestions</code> 配置项可用来代码片段的显示级别，有以下可选值； - <code>none</code>: 代码片段不显示在 “建议” 中。可搭配“插入代码片段”快捷键使用。 - <code>top</code>：代码片段级别最高，会显示在其他 suggest 类型的前面。当使用 top 时，可以为自定义的代码片段提供一个特殊的前缀，这样就能保证自己的代码片段一定在最上方了。 - <code>bottom</code>：与 <code>top</code> 相反。 - <code>inline</code>：默认值。表示穿插在其他类型之间。</p>`,12),n=[d];function o(p,l,h,c,E,r){return t(),i("div",null,n)}const g=s(a,[["render",o]]);export{u as __pageData,g as default};
